apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: 'dagger.hilt.android.plugin'

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "laurenyew.petadoptsampleapp"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildFeatures {
        // Enables Jetpack Compose for this module
        compose true
        viewBinding true
    }

    composeOptions {
        kotlinCompilerVersion "$kotlin_version"
        kotlinCompilerExtensionVersion "$compose_version"
    }

    buildTypes {
        all {
            buildConfigField("String", "CLIENT_ID", "\"" + localProperties["client.id"] + "\"")
            buildConfigField("String", "CLIENT_SECRET", "\"" + localProperties["client.secret"] + "\"")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
        useIR = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.activity:activity-compose:1.3.0-beta02'
    implementation "androidx.core:core-ktx:1.5.0"
    implementation "com.google.android.material:material:1.3.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$android_navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$android_navigation_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$android_navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$android_navigation_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    
    // Jetpack Compose
    implementation "androidx.compose.compiler:compiler:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    // View Models
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$compose_version"
    // Material Design
    implementation "androidx.compose.material:material:$compose_version"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose_version"
    // Navigation
    implementation "androidx.navigation:navigation-compose:2.4.0-alpha03"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0-alpha03"

    // Jetpack Paging
    implementation "androidx.paging:paging-runtime:$paging_version"
    implementation "androidx.paging:paging-compose:1.0.0-alpha10"
    testImplementation "androidx.paging:paging-common:$paging_version"


    //Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    //Image Loading
    implementation "com.google.accompanist:accompanist-glide:0.12.0"
    implementation "com.google.accompanist:accompanist-swiperefresh:0.14.0"


    //Networking
    api("com.squareup.retrofit2:retrofit:$retrofit_version")

    //Parse JSON
    api "com.squareup.moshi:moshi:1.11.0"
    api "com.squareup.moshi:moshi-kotlin:1.10.0"
    api "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // Room
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-common:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    testImplementation "junit:junit:4.13"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3"

    // UI Tests
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
}
